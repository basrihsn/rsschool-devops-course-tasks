name: Terraform Workflow

on:
    push:
        branches:
            - task_2
    pull_request:
        branches:
            - task_2
    workflow_dispatch:
        inputs:
            confirm_destroy:
                description: 'Type "DESTROY" to confirm destruction of all resources'
                required: true
                default: ''

permissions:
    id-token: write
    contents: read

jobs:
    terraform-check:
        name: Terraform Format Check
        runs-on: ubuntu-latest
        if: github.event_name != 'workflow_dispatch'

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v3
              with: 
                terraform_version: 1.6.6
            
            - name: Terraform Format Check
              run: terraform fmt

    terraform-plan:
        name: Terraform Plan
        runs-on: ubuntu-latest
        needs: terraform-check
        if: github.event_name != 'workflow_dispatch'

        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v3
              with:
                terraform_version: 1.6.6
            
            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                role-to-assume: arn:aws:iam::112865150509:role/GithubActionsRole
                role-session-name: terraform-github-session
                aws-region: us-east-1

            - name: Terraform Init
              run: terraform init

            - name: Terraform Validate
              run: terraform validate

            - name: Terraform Plan
              run: terraform plan -input=false -var="public_key=${{ secrets.SSH_PUBLIC_KEY }}" -var="my_ip=${{ secrets.MY_IP }}"

    terraform-apply:
        name: Terraform Apply
        runs-on: ubuntu-latest
        needs: terraform-plan
        if: github.event_name != 'workflow_dispatch'

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v3
              with:
                terraform_version: 1.6.6

            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                role-to-assume: arn:aws:iam::112865150509:role/GithubActionsRole
                role-session-name: terraform-github-session
                aws-region: us-east-1

            - name: Terraform Init
              run: terraform init

            - name: Terraform Apply
              run: terraform apply -auto-approve -input=false -var="public_key=${{ secrets.SSH_PUBLIC_KEY }}" -var="my_ip=${{ secrets.MY_IP }}"

    terraform-destroy:
        name: üóëÔ∏è Terraform Destroy
        runs-on: ubuntu-latest
        if: github.event_name == 'workflow_dispatch'

        steps:
            - name: Validate Destroy Confirmation
              run: |
                if [ "${{ github.event.inputs.confirm_destroy }}" != "DESTROY" ]; then
                  echo "‚ùå Destroy confirmation failed. You must type 'DESTROY' to proceed."
                  exit 1
                fi
                echo "‚úÖ Destroy confirmation validated"

            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v3
              with:
                terraform_version: 1.6.6

            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                role-to-assume: arn:aws:iam::112865150509:role/GithubActionsRole
                role-session-name: terraform-destroy-session
                aws-region: us-east-1

            - name: Terraform Init
              run: terraform init

            - name: Terraform Plan Destroy
              run: terraform plan -destroy -var="public_key=${{ secrets.SSH_PUBLIC_KEY }}" -var="my_ip=${{ secrets.MY_IP }}"

            - name: üóëÔ∏è Terraform Destroy
              run: terraform destroy -auto-approve -input=false -var="public_key=${{ secrets.SSH_PUBLIC_KEY }}" -var="my_ip=${{ secrets.MY_IP }}"

            - name: ‚úÖ Destruction Complete
              run: |
                echo "üéâ Infrastructure successfully destroyed!"
                echo "üí∞ All AWS resources have been cleaned up."